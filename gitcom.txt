
一、git 初始化
	git config --global user.name"your name" #设置用户名
	git config --global user.email"your email"#设置密码
	git init #把当前目录设置成仓库

二、本地仓库

	1、添加文件到仓库
		git add <file> #将单个文件或多个文件添加到暂存区
		git commit -m <message>#将暂存区文件添加到仓库
		git status #查看工作区状态，文件是否被修改过
		git diff <file> #查看文件修改内容
	
	2、版本回退
		git reset --hard HEAD^ #回退上个版本（HEAD^^回退上上个版本，HEAD~100往上回退100个版本）
		git reset --hard commit_id  #根据ID回退版本
		git log #查看提交历史
		git relog #查看命令历史

	3、撤销修改
		3.1 工作区
			git checkout --file #丢弃工作区修改
		3.2 暂存区
			git reset HEAD <file>#丢弃暂存区修改
			git checkout --file #丢弃工作区修改

	4、删除文件
		rm <file> #删除工作区文件
			4.1 确认删除工作区文件，同步删除版本库文件
				git rm <file>
				git commit -m <message>
			4.2 误删工作区文件，通过版本库文件恢复
				git checkout -- file

三、远程仓库
	1、注册远程仓库github
		1.1 注册github
		1.2 创建ssh key
			ssh-keygen -t rsa -C "youremail@example.com"
		1.3 .ssh目录下生成两个文件id_rsa和id_rs.pub
		1.4 登陆github ，打开account settings > ssh keys > add ssh key > 填上任意title，在key文本里贴贴id_rsa.pub文件内容
	2、添加远程库
		2.1 登陆github > create a new repo
		2.2 git remote add origin git@github.com：username/xxx.git #将本地仓和远程仓关联
		2.3 git push -u origin master #第一次将当前分支master推送到远程仓，后面就将-u省略
		2.4 git push origin master #推送最新修改
	3、从远程库克隆
		git clone git@github.com:username/xxx.git
		git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。

四、分支管理
	1、创建与合并分支
		git branch #查看分支
		git branch <name> #创建分支
		git checkout <name> #切换分支
		git checkout -b <name> #创建+切换分支
		git merge <name> #合并某分支到当前分支
		git brange -d <name> #删除分支
	2、解决冲突
		git log --graph #查看分支合并图
	3、分支管理策略
		3.1 git合并分支时，通常会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。
		3.2 合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。
	4、Bug分支
		修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；
		git stash list #查看stash内容
		git stash apply #恢复stash内容，但不删除
		git stash drop #删除stash内容
		git stash pop #恢复stash内容并删除
	5、Feature分支
		开发一个新的feature,最好新建一个分支
		git branch -D <name> #强行删除
	
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
